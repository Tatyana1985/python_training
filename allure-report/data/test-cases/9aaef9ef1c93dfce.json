{
  "uid" : "9aaef9ef1c93dfce",
  "name" : "test_add_group[None:nameV@h:header:footer=g+ o'C{Ivn\"0]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "0896731457949b8d23961b1591cb6530",
  "time" : {
    "start" : 1618211583189,
    "stop" : 1618211584306,
    "duration" : 1117
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [9:name*6 -:h...:footerR, ...] == [9:name*6 -:h...:footerR, ...]\n  Left contains one more item: None:nameV@h:header:footer=g+ o'C{Ivn\"0\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x00000109C87087C0>\ndb = <fixture.db.DbFixture object at 0x00000109C8708850>, json_groups = None:nameV@h:header:footer=g+ o'C{Ivn\"0\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [9:name*6 -:h...:footerR, ...] == [9:name*6 -:h...:footerR, ...]\nE             Left contains one more item: None:nameV@h:header:footer=g+ o'C{Ivn\"0\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:18: AssertionError",
  "flaky" : true,
  "beforeStages" : [ {
    "name" : "stop",
    "time" : {
      "start" : 1618211575899,
      "stop" : 1618211575899,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1618211575900,
      "stop" : 1618211575919,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1618211583150,
      "stop" : 1618211583188,
      "duration" : 38
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1618211583188,
      "stop" : 1618211583189,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [9:name*6 -:h...:footerR, ...] == [9:name*6 -:h...:footerR, ...]\n  Left contains one more item: None:nameV@h:header:footer=g+ o'C{Ivn\"0\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x00000109C87087C0>\ndb = <fixture.db.DbFixture object at 0x00000109C8708850>, json_groups = None:nameV@h:header:footer=g+ o'C{Ivn\"0\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [9:name*6 -:h...:footerR, ...] == [9:name*6 -:h...:footerR, ...]\nE             Left contains one more item: None:nameV@h:header:footer=g+ o'C{Ivn\"0\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:18: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1618211583189,
        "stop" : 1618211583191,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "When I add a group None:nameV@h:header:footer=g+ o'C{Ivn\"0 to the list",
      "time" : {
        "start" : 1618211583191,
        "stop" : 1618211584304,
        "duration" : 1113
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Then the new group list is equal to the old list with the added group",
      "time" : {
        "start" : 1618211584304,
        "stop" : 1618211584305,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [9:name*6 -:h...:footerR, ...] == [9:name*6 -:h...:footerR, ...]\n  Left contains one more item: None:nameV@h:header:footer=g+ o'C{Ivn\"0\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Users\\chunikhina\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 18, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1618211593812,
      "stop" : 1618211596250,
      "duration" : 2438
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1618211593811,
      "stop" : 1618211593811,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "Chunikhina-VRN"
  }, {
    "name" : "thread",
    "value" : "27236-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:nameV@h:header:footer=g+ o'C{Ivn\"0"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "37033dfc1161b983",
      "status" : "broken",
      "statusDetails" : "AttributeError: module 'pytest' has no attribute 'allure'",
      "time" : {
        "start" : 1618210563718,
        "stop" : 1618210563719,
        "duration" : 1
      }
    }, {
      "uid" : "abeb14432304bc19",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert [9:name*6 -:h...:footerR, ...] == [9:name*6 -:h...:footerR, ...]\n  Left contains one more item: None:nameV@h:header:footer=g+ o'C{Ivn\"0\n  Use -v to get the full diff",
      "time" : {
        "start" : 1618207770670,
        "stop" : 1618207771580,
        "duration" : 910
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9aaef9ef1c93dfce.json",
  "parameterValues" : [ "None:nameV@h:header:footer=g+ o'C{Ivn\"0" ]
}